name: Build and Deploy F1 FIA Doc

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy F1 FIA Doc
    runs-on: ubuntu-24.04

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set Up JDK 17r
        uses: actions/setup-java@v4
        with:
          distribution: "corretto"
          java-version: 17

      - name: Build the App
        run: mvn clean package -Pprd -DskipTests --file pom.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.PAT_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v1.0.0
        env:
          SPRING_DATASOURCE_URL: ${{ secrets.SPRING_DATASOURCE_URL }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.SPRING_DATASOURCE_USERNAME }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.SPRING_DATASOURCE_PASSWORD }}
          OPENAI_TOKEN: ${{ secrets.OPENAI_TOKEN }}
          DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_IMAGE_NAME }}
        with:
          host: ${{ secrets.VPS_IP_ADDRESS }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          envs: SPRING_DATASOURCE_URL,SPRING_DATASOURCE_USERNAME,SPRING_DATASOURCE_PASSWORD,OPENAI_TOKEN,DOCKER_IMAGE_NAME
          script: |
            echo "${{ secrets.PAT_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin
            
            docker pull $DOCKER_IMAGE_NAME
            
            docker compose -f docker-compose-prod.yml down
            
            docker compose -f docker-compose-prod.yml up -d --remove-orphans
            
            docker image prune -f